// User function Template for Java
class Solution {
    public static int aggressiveCows(int[] stalls, int k) {
        // code here
         Arrays.sort(stalls);  // Step 1: Sort the stalls

        int low = 1;
        int high = stalls[stalls.length - 1] - stalls[0];
        int result = 0;

        while (low <= high) {
            int mid = low + (high - low) / 2;

            if (canPlaceCows(stalls, k, mid)) {
                result = mid;      // mid is a valid answer, try for more
                low = mid + 1;
            } else {
                high = mid - 1;    // mid is too much, reduce it
            }
        }

        return result;
    }

    private static boolean canPlaceCows(int[] stalls, int k, int minDist) {
        int count = 1; // First cow is always placed
        int lastPos = stalls[0];

        for (int i = 1; i < stalls.length; i++) {
            if (stalls[i] - lastPos >= minDist) {
                count++;
                lastPos = stalls[i];
            }

            if (count >= k) return true;
        }

        return false;
    }
}
    
