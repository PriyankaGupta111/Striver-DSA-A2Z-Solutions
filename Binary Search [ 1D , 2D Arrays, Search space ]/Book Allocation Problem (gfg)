
//Back-end complete function Template for Java

class Solution {
    public static int findPages(int[] arr, int k) {
        // code here
        int n = arr.length;
        if (k > n) return -1; // Not enough books

        int low = Arrays.stream(arr).max().getAsInt();
        int high = Arrays.stream(arr).sum();
        int result = -1;

        while (low <= high) {
            int mid = low + (high - low) / 2;

            if (isPossible(arr, k, mid)) {
                result = mid;
                high = mid - 1; // Try to minimize
            } else {
                low = mid + 1;
            }
        }

        return result;
    }

    private static boolean isPossible(int[] arr, int k, int maxPages) {
        int studentCount = 1;
        int currentSum = 0;

        for (int pages : arr) {
            currentSum+=pages;
         
            if (currentSum  > maxPages) {
                studentCount++;
                currentSum = pages;
            //     if (studentCount > k) return false;
            // } 
        }
        }

        return studentCount<=k;
    }
    
}
