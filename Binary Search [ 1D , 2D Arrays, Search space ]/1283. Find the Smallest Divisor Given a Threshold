class Solution {
    public int smallestDivisor(int[] nums, int threshold) {
         int low = 1;
        int high = getMax(nums);
        int result = high;

        while (low <= high) {
            int mid = low + (high - low) / 2;
            int sum = getSum(nums, mid);

            if (sum <= threshold) {
                result = mid;  // valid, try smaller
                high = mid - 1;
            } else {
                low = mid + 1;  // too small, increase divisor
            }
        }

        return result;
    }

    private int getMax(int[] nums) {
        int max = nums[0];
        for (int num : nums) {
            max = Math.max(max, num);
        }
        return max;
    }

    private int getSum(int[] nums, int divisor) {
        int sum = 0;
        for (int num : nums) {
            sum += (num + divisor - 1) / divisor; // integer ceil of division
        }
        return sum;
    }
}
