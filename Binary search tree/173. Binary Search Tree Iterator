class BSTIterator {
     private Stack<TreeNode> stack = new Stack<>();

    public BSTIterator(TreeNode root) {
           pushAllLeft(root); 
        
    }
    
    public int next() {
         TreeNode node = stack.pop();
        if (node.right != null) {
            pushAllLeft(node.right); // Push all left children of the right subtree
        }
        return node.val;
        
    }
    
    public boolean hasNext() {
        return !stack.isEmpty();
        
    }

       private void pushAllLeft(TreeNode node) {
        while (node != null) {
            stack.push(node);
            node = node.left;
        }
    }
}
