class Solution {
    public int maxArea(int[] height) {
         int left = 0; // शुरआत में बाएं साइड पर पॉइंटर
        int right = height.length - 1; // अंत में दाहिने साइड पर पॉइंटर
        int maxArea = 0; // सबसे ज्यादा पानी रखने का एरिया

        while (left < right) { 
            // दोनो पॉइंटर्स के बीच में तब तक चलते रहेंगे जब तक वे एक-दूसरे से ना टकरा जाएं

            // करंट कंटेनर का छोटा ऊंचाई वाला हिस्सा लेंगे
            int minHeight = Math.min(height[left], height[right]);
            // करंट कंटेनर की चौड़ाई निकालेंगे
            int width = right - left;
          
            int currentArea = minHeight * width;

            // अगर करंट एरिया अब तक के मैक्स एरिया से बड़ा है तो अपडेट कर देंगे
            maxArea = Math.max(maxArea, currentArea);

            // अब जो छोटी ऊंचाई वाला है, उसी साइड को मूव करेंगे ताकि हो सकता है आगे और ज्यादा पानी मिले
            if (height[left] < height[right]) {
                left++; // बाईं तरफ से बढ़ाएँगे
            } else {
                right--; // दाईं तरफ से घटाएँगे
            }
        }

        return maxArea; // आखिरी में सबसे ज्यादा पानी वाला एरिया देंगे
    }
}
