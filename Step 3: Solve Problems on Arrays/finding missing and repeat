import java.util.*;

public class Repeat {
    public static int[] findRepeatingAndMissing(int[][] grid) {
        int n = grid.length;
        int[] arr = new int[2];
        HashSet<Integer> set = new HashSet<>();

        // Step 1: Find the repeating number
        for (int i = 0; i < grid.length; i++) {
            for (int j = 0; j < grid[i].length; j++) {
                int value = grid[i][j];
                if (set.contains(value)) {
                    arr[0] = value; // repeating number
                } else {
                    set.add(value);
                }
            }
        }

        // Step 2: Find the missing number
        int size = n * n;
        for (int i = 1; i <= size; i++) {
            if (!set.contains(i)) {
                arr[1] = i; // missing number
                break;
            }
        }

        return arr;
    }

    public static void main(String[] args) {
        int[][] grid1 = {
            {1, 3},
            {2, 2}
        };
        System.out.println(Arrays.toString(findRepeatingAndMissing(grid1))); // Output: [2, 4]

        int[][] grid2 = {
            {9, 1, 7},
            {8, 9, 2},
            {3, 4, 6}
        };
        System.out.println(Arrays.toString(findRepeatingAndMissing(grid2))); // Output: [9, 5]
    }
}
