import java.util.Arrays;

public class RotateMatrix {
    public void rotate(int[][] matrix) {
        int n = matrix.length;

        // Step 1: Transpose the matrix
        for (int i = 0; i < n; i++) {
            for (int j = i; j < n; j++) {
                // Swap matrix[i][j] and matrix[j][i]
                int temp = matrix[i][j];
                matrix[i][j] = matrix[j][i];
                matrix[j][i] = temp;
            }
        }

        // Step 2: Reverse each row
        for (int i = 0; i < n; i++) {
            reverse(matrix[i]); // Calling the helper method
        }
    }

    // Helper method to reverse a row
    private void reverse(int[] row) {
        int start = 0;
        int end = row.length - 1; // Corrected: Now using row.length

        while (start < end) {
            // Swap row[start] and row[end]
            int temp = row[start];
            row[start] = row[end];
            row[end] = temp;
            start++;
            end--;
        }
    }

    // Main method to test the function
    public static void main(String[] args) {
        RotateMatrix obj = new RotateMatrix();
        int[][] matrix = {
            {1, 2, 3},
            {4, 5, 6},
            {7, 8, 9}
        };

        obj.rotate(matrix);

        // Printing the rotated matrix
        for (int[] row : matrix) {
            System.out.println(Arrays.toString(row));
        }
    }
}
