class Solution {
    public int findLongestChain(int[][] pairs) {
        //     Arrays.sort(pairs, Comparator.comparingInt(a -> a[0])); // sort by start
        // int n = pairs.length;
        // int[] dp = new int[n];
        // Arrays.fill(dp, 1);

        // int maxLen = 1;

        // for (int i = 1; i < n; i++) {
        //     for (int j = 0; j < i; j++) {
        //         if (pairs[j][1] < pairs[i][0]) {
        //             dp[i] = Math.max(dp[i], dp[j] + 1);
        //         }
        //     }
        //     maxLen = Math.max(maxLen, dp[i]);
        // }

        // return maxLen;

        Arrays.sort(pairs, Comparator.comparingInt(a -> a[1])); // sort by end
        int currentEnd = Integer.MIN_VALUE;
        int count = 0;

        for (int[] pair : pairs) {
            if (pair[0] > currentEnd) {
                count++;
                currentEnd = pair[1];
            }
        }

        return count;
    }
}
