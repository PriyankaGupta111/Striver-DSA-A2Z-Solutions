class Solution {
    public long maximumSubarraySum(int[] nums, int k) {
        int size=nums.length;
        int i=0 ,j=0;   //here i -> start index and j-> end index
        long maxsum= 0;
        long sum=0;
        Set<Integer> set = new HashSet<>();
        while(j<size){
            while(set.contains(nums[j])){
                sum-=nums[i];
                set.remove(nums[i]);
                i++;
            }
            sum+=nums[j];
            set.add(nums[j]);
            if(j-i+1==k){
                maxsum= Math.max(maxsum, sum);
                sum-=nums[i];
                set.remove(nums[i]);
                i++;
            }
            j++;
        }
        return maxsum;

    }
}
